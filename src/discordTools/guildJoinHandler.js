const { EmbedBuilder } = require('discord.js');
const DiscordEmbeds = require('./discordEmbeds.js');
const DiscordButtons = require('./discordButtons.js');
const Config = require('../../config');
const axios = require('axios'); // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç axios

module.exports = async (client, guild) => {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º –∏–∑ –∞—É–¥–∏—Ç-–ª–æ–≥–∞
        let inviter = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        try {
            const auditLogs = await guild.fetchAuditLogs({
                type: 28, // –ß–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ –¥–ª—è BOT_ADD
                limit: 1
            });
            const entry = auditLogs.entries.first();
            if (entry && entry.executor) {
                inviter = `${entry.executor.tag} (ID: ${entry.executor.id})`;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—É–¥–∏—Ç-–ª–æ–≥–∞:', error);
        }

        // –°–æ–∑–¥–∞–µ–º Embed –¥–ª—è –≤–µ–±—Ö—É–∫–∞
        const joinEmbed = new EmbedBuilder()
            .setColor(0x00FF00)
            .setTitle('‚úÖ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä')
            .addFields(
                { name: '–ù–∞–∑–≤–∞–Ω–∏–µ', value: guild.name, inline: true },
                { name: 'ID —Å–µ—Ä–≤–µ—Ä–∞', value: guild.id, inline: true },
                { name: '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value: guild.memberCount.toString(), inline: true },
                { name: '–í–ª–∞–¥–µ–ª–µ—Ü', value: `<@${guild.ownerId}> (ID: ${guild.ownerId})`, inline: true },
                { name: '–î–æ–±–∞–≤–∏–ª', value: inviter }
            )
            .setThumbnail(guild.iconURL({ format: 'png', dynamic: true }))
            .setTimestamp();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ–±—Ö—É–∫
        await axios.post(Config.discord.webhookerror, {
            embeds: [joinEmbed.toJSON()]
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–µ–±—Ö—É–∫–∞:', error);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–∞–Ω–∞–ª–∞
    const channel = guild.systemChannel || guild.channels.cache.find(c => c.type === 0);
    if (!channel) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    const botJoinDate = guild.members.me?.joinedAt;
    const serverAge = Date.now() - guild.createdAt;
    if (serverAge > 300_000 && (Date.now() - botJoinDate) > 120_000) return;

    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const serverCount = client.guilds.cache.size;
    const badgeURL = `https://img.shields.io/badge/–°–µ—Ä–≤–µ—Ä–æ–≤-${serverCount}-orange?logo=serverless&style=flat-square`;

    const supportEmbed = new EmbedBuilder()
        .setColor(0xDD6E0F)
        .setTitle('üîó –°—Å—ã–ª–∫–∏')
        .setDescription(
            `üí¨ [–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞](${Config.general.supportServer})\n` +
            `‚ù§Ô∏è [–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞](${Config.general.donatelink} "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!")`
        )
        .setFooter({ 
            text: `–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ ${serverCount} —Å–µ—Ä–≤–µ—Ä–∞—Ö.`,
            iconURL: badgeURL
        })
        .setThumbnail(client.user.displayAvatarURL({ 
            format: 'png', 
            size: 512,
            dynamic: true 
        }))

    channel.send({ 
        embeds: [DiscordEmbeds.getHelpEmbed(guild.id), supportEmbed],
        components: DiscordButtons.getHelpButtons()
    }).catch(console.error);
};